<local:RibbonDemoModule x:Class="RibbonDemo.RibbonSimplePad"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:RibbonDemo"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:coll="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Height="500" Width="1108.605" x:Name="root"
    DataContext="{dxmvvm:ViewModelSource Type=local:RibbonSimplePadViewModel}">
    <local:RibbonDemoModule.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/RibbonDemo;component/Modules/RibbonSimplePad/Views/BackstageViewPanes.xaml" />
                <ResourceDictionary Source="/RibbonDemo;component/Modules/RibbonSimplePad/Views/TemplateSelectors.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dxmvvm:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter" />
            <local:ImageScaleValueConverter x:Key="ImageScaleValueConverter" />
            <local:ObjectsEqualityConverter x:Key="objectsEqualityConverter"/>
            <local:ObjectsEqualityConverter x:Key="objectsEqualityInverseConverter" Inverse="True"/>
        </ResourceDictionary>
    </local:RibbonDemoModule.Resources>
    <dxdb:DemoModuleControl>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <dxr:RibbonControl x:Name="RibbonControl" ApplicationButtonLargeIcon="/RibbonDemo;component/Images/ribbon-application-32x32.png"
                                   PageCategoryAlignment="{Binding CurrentOptions.PageCategoryAlignment, Mode=TwoWay}"
                                   RibbonTitleBarVisibility="{Binding CurrentOptions.TitleBarVisibility, Mode=TwoWay}"
                                   RibbonStyle="{Binding CurrentOptions.RibbonStyle, Mode=TwoWay}"
                                   ToolbarShowMode="{Binding CurrentOptions.ToolbarShowMode, Mode=TwoWay}">
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand EventName="BackstageOpened" Command="{Binding BackstageOpenedCommand}" />
                </dxmvvm:Interaction.Triggers>
                <dxmvvm:Interaction.Behaviors>
                    <local:BackstageViewService />
                </dxmvvm:Interaction.Behaviors>
                <dxr:RibbonControl.ApplicationMenu>
                    <dxr:BackstageViewControl>
                        <dxr:BackstageButtonItem Content="New" MinWidth="150" Glyph="{dx:DXImage Image=New_16x16.png}" Command="{Binding ElementName=richControl, Path=ClearCommand}" />
                        <dxr:BackstageButtonItem Content="Open" Glyph="{dx:DXImage Image=Open_16x16.png}" />
                        <dxr:BackstageTabItem Content="Recent">
                            <dxr:BackstageTabItem.ControlPane>
                                <ContentControl Template="{StaticResource RecentControlPaneTemplate}"  SnapsToDevicePixels="True"/>
                            </dxr:BackstageTabItem.ControlPane>
                        </dxr:BackstageTabItem>
                        <dxr:BackstageTabItem Content="Options">
                            <dxr:BackstageTabItem.ControlPane>
                                <ContentControl Template="{StaticResource OptionsControlPaneTemplate}" />
                            </dxr:BackstageTabItem.ControlPane>
                        </dxr:BackstageTabItem>
                        <dxr:BackstageTabItem Content="Help">
                            <dxr:BackstageTabItem.ControlPane>
                                <ContentControl Template="{StaticResource HelpControlPaneTemplate}" />
                            </dxr:BackstageTabItem.ControlPane>
                        </dxr:BackstageTabItem>
                        <dxr:BackstageButtonItem Content="Close" Glyph="{dx:DXImage Image=Close_16x16.png}" />
                    </dxr:BackstageViewControl>
                </dxr:RibbonControl.ApplicationMenu>
                <dxr:RibbonControl.PageHeaderItems>
                    <dxb:BarButtonItem Name="eDescription" Glyph="{dx:DXImage Image=Info_16x16.png}" LargeGlyph="{dx:DXImage Image=Info_32x32.png}" Command="{Binding NavigateToHomeSiteCommand}"/>
                    <dxb:BarItemLink BarItemName="ribbonStyleItem" RibbonStyle="SmallWithText"/>
                </dxr:RibbonControl.PageHeaderItems>
                <dxr:RibbonControl.ToolbarItems>
                    <dxr:RibbonSpacingSelectorItemLink BarItemName="spacingSelector"/>
                    <dxb:BarItemLink BarItemName="bPaste"/>
                    <dxb:BarItemLink BarItemName="bCut"/>
                    <dxb:BarItemLink BarItemName="bCopy"/>
                </dxr:RibbonControl.ToolbarItems>
                <dxr:RibbonDefaultPageCategory>
                    <dxr:RibbonPage Caption="Home">
                        <dxr:RibbonPageGroup Caption="Clipboard" ShowCaptionButton="False" SmallGlyph="{dx:DXImage Image=Paste_16x16.png}">
                            <dxb:BarButtonItem Name="bPaste" Content="Paste" Glyph="{dx:DXImage Image=Paste_16x16.png}" LargeGlyph="{dx:DXImage Image=Paste_32x32.png}" Hint="Inserts the contents of the Clipboard at the insertion point." KeyGesture="Ctrl+V" Command="{Binding ElementName=richControl, Path=PasteCommand}" RibbonStyle="Large"/>
                            <dxb:BarButtonItem Name="bCut" Content="Cut" Glyph="{dx:DXImage Image=Cut_16x16.png}" LargeGlyph="{dx:DXImage Image=Cut_32x32.png}" KeyGesture="Ctrl+X" Command="{Binding ElementName=richControl, Path=CutCommand}" RibbonStyle="SmallWithText"/>
                            <dxb:BarButtonItem Name="bCopy" Content="Copy" Glyph="{dx:DXImage Image=Copy_16x16.png}" LargeGlyph="{dx:DXImage Image=Copy_32x32.png}" KeyGesture="Ctrl+C" Command="{Binding ElementName=richControl, Path=CopyCommand}" RibbonStyle="SmallWithText"/>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Font" ShowCaptionButton="False" SmallGlyph="{dx:DXImage Image=ChangeFontStyle_16x16.png}">
                            <dxr:BarButtonGroup Name="bgFont">
                                <dxb:BarEditItem EditWidth="{Binding Path=FontEditWidth, RelativeSource={RelativeSource AncestorType=local:RibbonSimplePad}}" Content="Font Size" Hint="Change the font size" EditValue="{Binding FontSize, Mode=TwoWay}">
                                    <dxb:BarEditItem.EditSettings>
                                        <dxe:ComboBoxEditSettings PopupMaxHeight="250" IsTextEditable="False" ItemsSource="{Binding FontSizes}"/>
                                    </dxb:BarEditItem.EditSettings>
                                </dxb:BarEditItem>
                                <dxb:BarEditItem EditWidth="120" Content="Font Family" Hint="Change the font family" EditValue="{Binding ElementName=richControl, Path=SelectionFontFamily, Mode=TwoWay}">
                                    <dxb:BarEditItem.EditSettings>
                                        <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding FontFamilies}"></dxe:ComboBoxEditSettings>
                                    </dxb:BarEditItem.EditSettings>
                                </dxb:BarEditItem>
                            </dxr:BarButtonGroup>
                            <dxr:BarButtonGroup Name="bgFontSizeChange">
                                <dxb:BarButtonItem Content="Grow Font" Glyph="{dx:DXImage Image=FontSizeIncrease_16x16.png}" Command="{Binding GrowFontCommand}"/>
                                <dxb:BarButtonItem Content="Shrink Font" Glyph="{dx:DXImage Image=FontSizeDecrease_16x16.png}" Command="{Binding ShrinkFontCommand}"/>
                            </dxr:BarButtonGroup>
                            <dxr:BarButtonGroup RibbonStyle="SmallWithoutText">
                                <dxb:BarCheckItem Content="Bold" Glyph="{dx:DXImage Image=Bold_16x16.png}" KeyGesture="Ctrl+B" IsChecked="{Binding ElementName=richControl, Path=IsBold, Mode=TwoWay}" />
                                <dxb:BarCheckItem Content="Italic" Glyph="{dx:DXImage Image=Italic_16x16.png}" KeyGesture="Ctrl+I" IsChecked="{Binding ElementName=richControl, Path=IsItalic, Mode=TwoWay}" />
                                <dxb:BarCheckItem Content="Underline" Glyph="{dx:DXImage Image=Underline_16x16.png}" KeyGesture="Ctrl+U" IsChecked="{Binding ElementName=richControl, Path=IsUnderline, Mode=TwoWay}" />
                            </dxr:BarButtonGroup>
                            <dxr:BarButtonGroup Name="bgFontColors" RibbonStyle="SmallWithoutText">
                                <dxb:BarSplitButtonItem Content="Text Highlight Color" Hint="Make text look like it was marked with a highlighter pen" ActAsDropDown="True">
                                    <dxb:BarSplitButtonItem.GlyphTemplate>
                                        <DataTemplate>
                                            <Canvas Width="16" Height="16">
                                                <Image Source="/RibbonDemo;component/Images/Icons/font-color-16x16.png"/>
                                                <Border Width="14" Height="2" Canvas.Left="1" Canvas.Top="14">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="{Binding ElementName=richControl, Path=SelectionTextBackgroundColor}"/>
                                                    </Border.Background>
                                                </Border>
                                            </Canvas>
                                        </DataTemplate>
                                    </dxb:BarSplitButtonItem.GlyphTemplate>
                                    <dxb:BarSplitButtonItem.PopupControl>
                                        <dxb:PopupControlContainer>
                                            <dxe:ColorEdit DefaultColor="Transparent" DefaultColorButtonContent="No color" ShowBorder="False" EditValue="{Binding ElementName=richControl, Path=SelectionTextBackgroundColor, Mode=TwoWay}" CloseOwnerPopupOnClick="True"/>
                                        </dxb:PopupControlContainer>
                                    </dxb:BarSplitButtonItem.PopupControl>
                                </dxb:BarSplitButtonItem>
                                <dxb:BarSplitButtonItem Content="Font Color" Hint="Change the font color" ActAsDropDown="True">
                                    <dxb:BarSplitButtonItem.GlyphTemplate>
                                        <DataTemplate>
                                            <Canvas Width="16" Height="16">
                                                <Image Source="{dx:DXImage Image=HighlightField_16x16.png}"/>
                                                <Border Width="14" Height="2" Canvas.Left="1" Canvas.Top="14">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="{Binding ElementName=richControl, Path=SelectionTextColor}"/>
                                                    </Border.Background>
                                                </Border>
                                            </Canvas>
                                        </DataTemplate>
                                    </dxb:BarSplitButtonItem.GlyphTemplate>
                                    <dxb:BarSplitButtonItem.PopupControl>
                                        <dxb:PopupControlContainer>
                                            <dxe:ColorEdit DefaultColor="Black" EditValue="{Binding ElementName=richControl, Path=SelectionTextColor, Mode=TwoWay}" CloseOwnerPopupOnClick="True" ShowBorder="False"/>
                                        </dxb:PopupControlContainer>
                                    </dxb:BarSplitButtonItem.PopupControl>
                                </dxb:BarSplitButtonItem>
                            </dxr:BarButtonGroup>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Paragraph">
                            <dxr:BarButtonGroup>
                                <dxb:BarCheckItem Name="bLeft" Content="Left" GroupIndex="1" KeyGesture="Ctrl+L" Glyph="{dx:DXImage Image=AlignLeft_16x16.png}" IsChecked="{Binding ElementName=richControl, Path=IsLeftAlignment, Mode=TwoWay}" />
                                <dxb:BarCheckItem Name="bCenter" Content="Center" GroupIndex="1" KeyGesture="Ctrl+E" Glyph="{dx:DXImage Image=AlignCenter_16x16.png}" IsChecked="{Binding ElementName=richControl, Path=IsCenterAlignment, Mode=TwoWay}" />
                                <dxb:BarCheckItem Name="bRight" Content="Right" GroupIndex="1" KeyGesture="Ctrl+R" Glyph="{dx:DXImage Image=AlignRight_16x16.png}" IsChecked="{Binding ElementName=richControl, Path=IsRightAlignment, Mode=TwoWay}" />
                            </dxr:BarButtonGroup>
                            <dxr:BarButtonGroup>
                                <dxb:BarSplitCheckItem Content="Start a list" KeyGesture="Ctrl+Shift+L" Hint="Click the arrow to choose different list styles" Glyph="{dx:DXImage Image=ListBullets_16x16.png}" IsChecked="{Binding ElementName=richControl, Path=IsList, Mode=TwoWay}">
                                    <dxb:BarSplitCheckItem.PopupControl>
                                        <dxr:GalleryDropDownPopupMenu x:Name="pmMarkerType" InitialVisibleColCount="5" >
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery x:Name="gMarkerType" ColCount="5" MinColCount="2" RowCount="2" IsGroupCaptionVisible="False" AllowFilter="False" IsItemCaptionVisible="False" IsItemDescriptionVisible="False"
                                                            ItemCheckMode="Single" FirstCheckedItem="{Binding ElementName=richControl, Path=ListMarkerStyle, Mode=TwoWay}" >
                                                    <dxb:Gallery.Groups>
                                                        <dxb:GalleryItemGroup ItemsSource="{Binding ListMarkerStyles}" ItemTemplate="{StaticResource textMarkerStyleItemTemplate}"/>
                                                    </dxb:Gallery.Groups>
                                                </dxb:Gallery>
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitCheckItem.PopupControl>
                                </dxb:BarSplitCheckItem>
                            </dxr:BarButtonGroup>
                            <dxr:BarButtonGroup>
                                <dxb:BarButtonItem Content="Increase Indent" KeyGesture="Ctrl+Shift+Right" Glyph="{dx:DXImage Image=IndentIncrease_16x16.png}" IsEnabled="False"/>
                                <dxb:BarButtonItem Content="Decrease Indent" KeyGesture="Ctrl+Shift+Left" Glyph="{dx:DXImage Image=IndentDecrease_16x16.png}" IsEnabled="False"/>
                            </dxr:BarButtonGroup>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Insert" ShowCaptionButton="False" SmallGlyph="{dx:DXImage Image=Insert_16x16.png}">
                            <dxb:BarButtonItem  IsEnabled="False" Content="Picture" LargeGlyph="/RibbonDemo;component/Images/Icons/InsertPicture-32x32.png" KeyGesture="Ctrl+A" Hint="Insert picture in document." RibbonStyle="Large" Glyph="pack://application:,,,/RibbonDemo;component/Images/Icons/InsertPicture-32x32.png"/>
                            <dxr:RibbonGalleryBarItem Content="Insert Image" Glyph="{dx:DXImage Image=Image_16x16.png}">
                                <dxr:RibbonGalleryBarItem.DropDownGallery>
                                    <dxb:Gallery IsItemCaptionVisible="False" IsGroupCaptionVisible="False" IsItemDescriptionVisible="False" ColCount="0" ItemGlyphStretch="None"
                                                 ItemGlyphHorizontalAlignment ="Center" ItemGlyphVerticalAlignment="Center" RowCount="3" MinColCount="3"
                                                 AllowFilter="False"
                                                 ItemClickCommand="{Binding InsertImageCommand}">
                                        <dxb:GalleryItemGroup ItemsSource="{Binding ClipartImages}">
                                            <dxb:GalleryItemGroup.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:GalleryItem Glyph="{Binding}" />
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:GalleryItemGroup.ItemTemplate>
                                        </dxb:GalleryItemGroup>
                                    </dxb:Gallery>
                                </dxr:RibbonGalleryBarItem.DropDownGallery>
                                <dxr:RibbonGalleryBarItem.Gallery>
                                    <dxb:Gallery IsItemCaptionVisible="False" ColCount="10" ItemGlyphSize="100,56" IsItemDescriptionVisible="False"
                                                 AllowFilter="False" IsGroupCaptionVisible="False" MinColCount="2" ItemGlyphHorizontalAlignment="Center"
                                                 ItemGlyphVerticalAlignment="Center" ItemClickCommand="{Binding InsertImageCommand}" ItemCheckMode="None">
                                        <dxb:GalleryItemGroup ItemsSource="{Binding ClipartImages}">
                                            <dxb:GalleryItemGroup.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:GalleryItem Glyph="{Binding}"/>
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:GalleryItemGroup.ItemTemplate>
                                        </dxb:GalleryItemGroup>
                                    </dxb:Gallery>
                                </dxr:RibbonGalleryBarItem.Gallery>
                            </dxr:RibbonGalleryBarItem>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Editing" ShowCaptionButton="False" Glyph="{dx:DXImage Image=Find_32x32.png}" SmallGlyph="{dx:DXImage Image=Find_16x16.png}">
                            <dxb:BarButtonItem Content="Clear text" Glyph="{dx:DXImage Image=RemoveItem_16x16.png}" LargeGlyph="{dx:DXImage Image=RemoveItem_32x32.png}" Command="{Binding ElementName=richControl, Path=ClearCommand}" RibbonStyle="All"/>
                            <dxb:BarButtonItem Content="Select All" KeyGesture="Ctrl+A" Hint="Selects all text in the document." Command="{Binding ElementName=richControl, Path=SelectAllCommand}" Glyph="{dx:DXImage Image=SelectAll_16x16.png}" LargeGlyph="{dx:DXImage Image=SelectAll_32x32.png}" RibbonStyle="All"/>
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                    <dxr:RibbonPage x:Name="pSettings" Caption="Settings">
                        <dxr:RibbonPageGroup Caption="Theme" ShowCaptionButton="False" SmallGlyph="{dx:DXImage Image=Palette_16x16.png}">
                            <dxr:RibbonGalleryBarItem Content="Theme" Glyph="{dx:DXImage Image=Colors_16x16.png}" LargeGlyph="{dx:DXImage Image=Colors_32x32.png}">
                                <dxr:RibbonGalleryBarItem.DropDownMenuItems>
                                    <dxr:RibbonSpacingSelectorItem Name="spacingSelector" Content="Space mode"/>
                                    <dxb:BarSplitButtonItem Name="ribbonStyleItem" Content="Ribbon Style" ActAsDropDown="True" ItemClickBehaviour="CloseAllPopups">
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupControlContainer>
                                                <dxb:GalleryControl>
                                                    <dxb:Gallery AllowFilter="False" DataContext="{Binding ElementName=pSettings, Path=DataContext}" ItemDescriptionHorizontalAlignment="Left" AutoHideGallery="True" ItemCheckMode="Single">
                                                        <dxb:GalleryItemGroup Caption="Classic">
                                                            <dxb:GalleryItem Caption="Office2007" Description="MS Office 2007 style Ribbon" IsChecked="{Binding CurrentOptions.RibbonStyle, Mode=TwoWay, Converter={StaticResource objectsEqualityConverter}, ConverterParameter=Office2007}" Glyph="/RibbonDemo;component/Images/RibbonStyle/Office2007.png"/>
                                                            <dxb:GalleryItem Caption="Office2010" Description="MS Office 2010 style Ribbon" IsChecked="{Binding CurrentOptions.RibbonStyle, Mode=TwoWay, Converter={StaticResource objectsEqualityConverter}, ConverterParameter=Office2010}" Glyph="/RibbonDemo;component/Images/RibbonStyle/Office2010.png"/>
                                                        </dxb:GalleryItemGroup>
                                                        <dxb:GalleryItemGroup Caption="Tablet">
                                                            <dxb:GalleryItem Caption="TabletOffice" Description="Emulates the UI found in MS Office for iPad" IsChecked="{Binding CurrentOptions.RibbonStyle, Mode=TwoWay, Converter={StaticResource objectsEqualityConverter}, ConverterParameter=TabletOffice}" Glyph="/RibbonDemo;component/Images/RibbonStyle/TabletOffice.png"/>
                                                            <dxb:GalleryItem Caption="OfficeSlim" Description="The Ribbon style inspired by the ribbon UI introduced in Microsoft &quot;Office Universal&quot; apps." IsChecked="{Binding CurrentOptions.RibbonStyle, Mode=TwoWay, Converter={StaticResource objectsEqualityConverter}, ConverterParameter=OfficeSlim}" Glyph="/RibbonDemo;component/Images/RibbonStyle/OfficeSlim.png"/>
                                                        </dxb:GalleryItemGroup>
                                                    </dxb:Gallery>
                                                </dxb:GalleryControl>
                                            </dxb:PopupControlContainer>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                </dxr:RibbonGalleryBarItem.DropDownMenuItems>
                                <dxmvvm:Interaction.Behaviors>
                                    <dxr:RibbonGalleryItemThemeSelectorBehavior/>
                                </dxmvvm:Interaction.Behaviors>
                            </dxr:RibbonGalleryBarItem>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Settings" ShowCaptionButton="False" SmallGlyph="{dx:DXImage Image=PageSetup_16x16.png}">
                            <dxb:BarEditItem Content="Title bar visibility:" EditWidth="100" ClosePopupOnChangingEditValue="True" EditValue="{Binding CurrentOptions.TitleBarVisibility, Mode=TwoWay}" RibbonStyle="SmallWithText">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings IsTextEditable="False" PopupMaxHeight="250" ItemsSource="{Binding Source={StaticResource ribbonTitleBarVisibilitySource}}" />
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarEditItem Content="Page category alignment:" EditWidth="100" ClosePopupOnChangingEditValue="True" EditValue="{Binding CurrentOptions.PageCategoryAlignment, Mode=TwoWay}" RibbonStyle="SmallWithText" IsVisible="{Binding Path=CurrentOptions.RibbonStyle, Converter={StaticResource objectsEqualityInverseConverter}, ConverterParameter=TabletOffice}">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings IsTextEditable="False" PopupMaxHeight="250">
                                        <dxe:ComboBoxEditSettings.Items>
                                            <dxr:RibbonPageCategoryCaptionAlignment>Right</dxr:RibbonPageCategoryCaptionAlignment>
                                            <dxr:RibbonPageCategoryCaptionAlignment>Left</dxr:RibbonPageCategoryCaptionAlignment>
                                        </dxe:ComboBoxEditSettings.Items>
                                    </dxe:ComboBoxEditSettings>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarEditItem Content="Toolbar show mode:" EditWidth="100" ClosePopupOnChangingEditValue="True" EditValue="{Binding CurrentOptions.ToolbarShowMode, Mode=TwoWay}" RibbonStyle="SmallWithText">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings IsTextEditable="False" PopupMaxHeight="250">
                                        <dxe:ComboBoxEditSettings.Items>
                                            <dxr:RibbonQuickAccessToolbarShowMode>ShowAbove</dxr:RibbonQuickAccessToolbarShowMode>
                                            <dxr:RibbonQuickAccessToolbarShowMode>ShowBelow</dxr:RibbonQuickAccessToolbarShowMode>
                                            <dxr:RibbonQuickAccessToolbarShowMode>Hide</dxr:RibbonQuickAccessToolbarShowMode>
                                        </dxe:ComboBoxEditSettings.Items>
                                    </dxe:ComboBoxEditSettings>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarSplitButtonItem Content="Category color" Hint="Category color" ActAsDropDown="True" RibbonStyle="Large" >
                                <dxb:BarSplitButtonItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Border Name="glyph" Height="16" Width="16" BorderBrush="Black" BorderThickness="1">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding CurrentOptions.PageCategoryColor}"/>
                                            </Border.Background>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=CurrentRibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkControl}}}" Value="Large">
                                                <Setter TargetName="glyph" Property="Width" Value="32"/>
                                                <Setter TargetName="glyph" Property="Height" Value="32"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </dxb:BarSplitButtonItem.GlyphTemplate>
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer>
                                        <dxe:ColorEdit Color="Black" DefaultColor="Orange" EditValue="{Binding CurrentOptions.PageCategoryColor, Mode=TwoWay}" DefaultColorButtonContent="Automatic" CloseOwnerPopupOnClick="True" ShowBorder="False"/>
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                </dxr:RibbonDefaultPageCategory>
                <dxr:RibbonPageCategory x:Name="selectionPageCategory" Caption="Image tools" IsVisible="{Binding SelectedImage, Converter={StaticResource ObjectToBooleanConverter}}" Color="{Binding CurrentOptions.PageCategoryColor}">
                    <dxr:RibbonPage x:Name="pSelection" Caption="Format">
                        <dxr:RibbonPageGroup Caption="Clipboard">
                            <dxb:BarItemLink BarItemName="bPaste" RibbonStyle="Large"/>
                            <dxb:BarItemLink BarItemName="bCut" RibbonStyle="Large"/>
                            <dxb:BarItemLink BarItemName="bCopy" RibbonStyle="Large"/>
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup Caption="Border Format" >
                            <dxb:BarEditItem Name="eImageScale" EditWidth="60" Content="Scale:" Hint="Image scale" Glyph="/RibbonDemo;component/Images/Icons/Scaling_16x16.png" EditValue="{Binding SelectedImage.Scale, Converter={StaticResource ImageScaleValueConverter}, Mode=TwoWay}">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings PopupMaxHeight="250" IsTextEditable="False" ItemsSource="{Binding ImageScaleValueArray}"/>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarEditItem Name="eImageBorderThickness" EditWidth="60" Content="Thickness:" Hint="Image border thickness" Glyph="/RibbonDemo;component/Images/Icons/Thickness_16x16.png" EditValue="{Binding SelectedImage.BorderWeight, Mode=TwoWay}" IsEnabled="{Binding SelectedImage.HasBorder}">
                                <dxb:BarEditItem.EditSettings>
                                    <dxe:ComboBoxEditSettings PopupMaxHeight="250" IsTextEditable="False" ItemsSource="{Binding BorderWeightArray}" />
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarSplitButtonItem Name="sbImageBorderColor" Content="border color" Hint="Image border color" IsEnabled="{Binding SelectedImage.HasBorder}" ActAsDropDown="True" RibbonStyle="Large">
                                <dxb:BarSplitButtonItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Border Name="glyph" Width="16" Height="16" BorderBrush="Black" BorderThickness="1">
                                            <Border.Background>
                                                <SolidColorBrush Color="{Binding SelectedImage.Color}"/>
                                            </Border.Background>
                                        </Border>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=CurrentRibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkControl}}}" Value="Large">
                                                <Setter TargetName="glyph" Property="Width" Value="32"/>
                                                <Setter TargetName="glyph" Property="Height" Value="32"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </dxb:BarSplitButtonItem.GlyphTemplate>
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer >
                                        <dxe:ColorEdit EditValue="{Binding SelectedImage.Color, Mode=TwoWay}" DefaultColor="Black" CloseOwnerPopupOnClick="True" ShowBorder="False"/>
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>
                            <dxr:RibbonGalleryBarItem Content="Image Style" Glyph="{Binding Path=SelectedImage.ShapeType, Converter={StaticResource inlineImageBorderTypeValueToImageSourceConverter}}">
                                <dxr:RibbonGalleryBarItem.DropDownGallery>
                                    <dxb:Gallery IsGroupCaptionVisible="False" AllowFilter="False" ColCount="3" IsItemDescriptionVisible="True" ItemDescriptionHorizontalAlignment="Center"
                                                  ItemCaptionHorizontalAlignment="Center" ItemCheckMode="Single" FirstCheckedItem="{Binding SelectedImage.ShapeType, Mode=TwoWay}">
                                        <dxb:Gallery.Groups>
                                            <dxb:GalleryItemGroup ItemsSource="{Binding ShapeTypes}" ItemTemplate="{StaticResource ImageBorderTypeItemTemplate}"/>
                                        </dxb:Gallery.Groups>
                                    </dxb:Gallery>
                                </dxr:RibbonGalleryBarItem.DropDownGallery>
                                <dxr:RibbonGalleryBarItem.Gallery>
                                    <dxb:Gallery x:Name="gShapes" ItemGlyphRegionSize="54,54" ItemCheckMode="Single" ItemGlyphStretch="None"
                                                 ItemCaptionMargin="0" ItemDescriptionMargin="0" IsItemDescriptionVisible="False" IsItemCaptionVisible="False"
                                                 ColCount="8" MinColCount="1" RowCount="2" FirstCheckedItem="{Binding SelectedImage.ShapeType, Mode=TwoWay}">
                                        <dxb:Gallery.Groups>
                                            <dxb:GalleryItemGroup ItemsSource="{Binding ShapeTypes}" ItemTemplate="{StaticResource ImageBorderTypeItemTemplate}"/>
                                        </dxb:Gallery.Groups>
                                    </dxb:Gallery>
                                </dxr:RibbonGalleryBarItem.Gallery>
                            </dxr:RibbonGalleryBarItem>
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                </dxr:RibbonPageCategory>
            </dxr:RibbonControl>
            <local:DemoRichControl Grid.Row="1" x:Name="richControl" SelectionFontSize="{Binding FontSize, Mode=TwoWay}"
                                           HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0">
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand EventName="ContainerChanged" Command="{Binding ContainerChangedCommand}" />
                </dxmvvm:Interaction.Triggers>
                <dxmvvm:Interaction.Behaviors>
                    <local:RibbonSimplePadImageService />
                </dxmvvm:Interaction.Behaviors>
            </local:DemoRichControl>
            <dxr:RibbonStatusBarControl Grid.Row="2" Name="StatusBar" IsSizeGripVisible="False">
                <dxr:RibbonStatusBarControl.RightItems>
                    <dxb:BarStaticItem ItemMinWidth="100" Command="{Binding NavigateToHomeSiteCommand}" ShowBorder="False">
                        <dxb:BarStaticItem.ContentTemplate>
                            <DataTemplate>
                                <Image Source="/RibbonDemo;component/Images/online.gif" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            </DataTemplate>
                        </dxb:BarStaticItem.ContentTemplate>
                    </dxb:BarStaticItem>
                </dxr:RibbonStatusBarControl.RightItems>
            </dxr:RibbonStatusBarControl>
        </Grid>
    </dxdb:DemoModuleControl>
</local:RibbonDemoModule>