<UserControl x:Class="SchedulerDemo.Forms.MyAppointmentEditForm"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
            xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
            xmlns:dxec="clr-namespace:DevExpress.Xpf.Editors.Controls;assembly=DevExpress.Xpf.Core.v15.2"
            xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"
            xmlns:dxschi="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal"
            xmlns:sys="clr-namespace:System;assembly=mscorlib"
            mc:Ignorable="d"
            x:Name="AptForm" MinWidth="420">
    <UserControl.Resources>
        <dxschi:TimeSpanToDateTimeConverter x:Key="timeSpanToDateTimeConverter" />
        <dxschi:InvertedBoolConverter x:Key="invertedBoolConverter" />
        <dxschi:ColorToBrushConverter x:Key="colorToBrushConverter" />

        <DataTemplate x:Key="RecTypeTemplate">
            <TextBlock Text="{Binding Description}" VerticalAlignment="Center" Margin="0,0,4,0" />
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid Margin="12">
            <Grid.IsSharedSizeScope>
                <sys:Boolean>True</sys:Boolean>
            </Grid.IsSharedSizeScope>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="92" />
                <ColumnDefinition Width="300" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Subject:" Margin="0,0,0,4" />
            <dxe:TextEdit Grid.Row="0" Grid.Column="1" Text="{Binding Controller.Subject, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxWidth="{Binding ActualWidth, ElementName=etdStatus}" Margin="0,0,0,4" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Start time:" Margin="0,4,0,0"></TextBlock>
            <Grid Grid.Row="1" Grid.Column="1" Margin="0,4,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.SharedSizeGroup>
                            <sys:String>FirstColumn</sys:String>
                        </ColumnDefinition.SharedSizeGroup>
                    </ColumnDefinition>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <dxe:DateEdit MinWidth="150" Grid.Row="0" Grid.Column="0" EditValue="{Binding Controller.DisplayStartDate, Mode=TwoWay}" Margin="0,0,4,4" />
                <dxe:ButtonEdit x:Name="edtStartTime" MinWidth="100" MaskType="DateTime" DisplayFormatString="{Binding TimeEditMask}"
                            Mask="{Binding TimeEditMask}" Grid.Row="0" Grid.Column="1" Margin="0,0,0,4"
                            EditValue="{Binding Controller.DisplayStartTime, Mode=TwoWay, Converter={StaticResource timeSpanToDateTimeConverter}}" IsEnabled="{Binding ElementName=chkAllDay, Path=IsChecked, Converter={StaticResource invertedBoolConverter}}"
                            AllowDefaultButton="False"
                            >
                </dxe:ButtonEdit>
            </Grid>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="End time:" Margin="0,0,0,4" />
            <Grid Grid.Row="2" Grid.Column="1" Margin="0,0,0,4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <dxe:DateEdit MinWidth="150" Grid.Row="0" Grid.Column="0" EditValue="{Binding Controller.DisplayEndDate, Mode=TwoWay}" Validate="OnEdtEndDateValidate" Margin="0,0,4,4" />
                <dxe:ButtonEdit Name="edtEndTime" MinWidth="100" MaskType="DateTime" DisplayFormatString="{Binding TimeEditMask}"
                            Mask="{Binding TimeEditMask}" Grid.Row="0" Grid.Column="1" Margin="0,0,0,4"
                            EditValue="{Binding Controller.DisplayEndTime, Mode=TwoWay, Converter={StaticResource timeSpanToDateTimeConverter}}" AllowDefaultButton="False"
                            IsEnabled="{Binding ElementName=chkAllDay, Path=IsChecked, Converter={StaticResource invertedBoolConverter}}"
                            Validate="OnEdtEndTimeValidate">
                </dxe:ButtonEdit>
            </Grid>

            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.SharedSizeGroup>
                            <sys:String>FirstColumn</sys:String>
                        </ColumnDefinition.SharedSizeGroup>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>
                <dxe:CheckEdit x:Name="chkAllDay" Content="All day event" EditValue="{Binding Controller.AllDay, Mode=TwoWay}" IsChecked="false"
                            />
                <dxe:CheckEdit Grid.Row="1" x:Name="chkRecurrence" Content="Recurrence" Margin="0,4,4,0" IsChecked="false"
                            Visibility="{Binding ShouldShowRecurrence, Converter={dxschi:BoolToVisibilityConverter}}"
                           EditValue="{Binding RecurrenceVisualController.EnableRecurrence, Mode=TwoWay}" />

                <dxe:ListBoxEdit Grid.Row="2" Grid.Column="1" x:Name="edtRecurrenceType"
                    Visibility="{Binding RecurrenceVisualController.EnableRecurrence, Converter={dxschi:BoolToVisibilityConverter}}"
                    Background="Transparent"
                    Margin="0,0,4,4"
                    ShowBorder="False"
                    ItemsSource="{Binding RecurrenceVisualController.RecurrenceElements}"
                    EditValue="{Binding RecurrenceVisualController.RecurrenceElement, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    ItemTemplate="{StaticResource RecTypeTemplate}">
                    <dxe:ListBoxEdit.StyleSettings>
                        <dxe:RadioListBoxEditStyleSettings />
                    </dxe:ListBoxEdit.StyleSettings>
                    <dxe:ListBoxEdit.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal"></StackPanel>
                        </ItemsPanelTemplate>
                    </dxe:ListBoxEdit.ItemsPanel>
                </dxe:ListBoxEdit>
            </Grid>

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Status:" Margin="0,0,0,4" />
            <dxsch:AppointmentStatusEdit x:Name="etdStatus"
                Grid.Row="4" Grid.Column="1" Margin="0,0,0,4" Padding="4,0,0,0" MinHeight="22"
                Storage="{Binding Controller.Storage}" EditValue="{Binding Controller.Status, Mode=TwoWay}">
            </dxsch:AppointmentStatusEdit>

            <TextBlock Grid.Row="5" Grid.Column="0" Text="Label:" Margin="0,0,0,4" />
            <dxsch:AppointmentLabelEdit Grid.Row="5" Grid.Column="1" Margin="0,0,0,4" Padding="4,0,0,0" MinHeight="22"
                Storage="{Binding Controller.Storage}" EditValue="{Binding Controller.Label, Mode=TwoWay}">
            </dxsch:AppointmentLabelEdit>
            <TextBlock Grid.Row="6" Grid.Column="0" Text="Custom Name:" Margin="0,4,0,4" />
            <dxe:TextEdit Grid.Row="6" Grid.Column="1" EditValue="{Binding Controller.CustomName, Mode=TwoWay}" Margin="0,4,0,4" />

            <TextBlock Grid.Row="7" Grid.Column="0" Text="Custom Status:" Margin="0,4,0,4" />
            <dxe:TextEdit Grid.Row="7" Grid.Column="1" EditValue="{Binding Controller.CustomStatus, Mode=TwoWay}" />

            <StackPanel Grid.Row="8" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,8,0,0">
                <Button Content="OK" Click="OnOKButtonClick" MinWidth="75" Margin="6,0,0,0" />
                <Button Content="Cancel" Click="OnCancelButtonClick" MinWidth="75" Margin="6,0,0,0" />
                <Button Content="Delete" Click="OnDeleteButtonClick" MinWidth="75" Margin="6,0,0,0" />
            </StackPanel>
        </Grid>



        <Grid x:Name="recurrenceGrid" Grid.Column="1" Visibility="{Binding RecurrenceVisualController.EnableRecurrence, Converter={dxschi:BoolToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <dxec:DXSeparator Grid.Column="0" Orientation="Vertical"></dxec:DXSeparator>
            <StackPanel Grid.Column="1" Margin="12">

                <dx:GroupFrame Header="Recurrence pattern" Margin="0,12,0,0">
                    <StackPanel>
                        <dxsch:DailyRecurrenceControl Visibility="{Binding RecurrenceVisualController.IsDailyRecurrence, Converter={dxschi:BoolToVisibilityConverter}}" RecurrenceInfo="{Binding RecurrenceVisualController.RecurrenceInfo}" />
                        <dxsch:WeeklyRecurrenceControl Visibility="{Binding RecurrenceVisualController.IsWeeklyRecurrence, Converter={dxschi:BoolToVisibilityConverter}}" RecurrenceInfo="{Binding RecurrenceVisualController.RecurrenceInfo}" />
                        <dxsch:MonthlyRecurrenceControl Visibility="{Binding RecurrenceVisualController.IsMonthlyRecurrence, Converter={dxschi:BoolToVisibilityConverter}}" RecurrenceInfo="{Binding RecurrenceVisualController.RecurrenceInfo}" />
                        <dxsch:YearlyRecurrenceControl Visibility="{Binding RecurrenceVisualController.IsYearlyRecurrence, Converter={dxschi:BoolToVisibilityConverter}}" RecurrenceInfo="{Binding RecurrenceVisualController.RecurrenceInfo}" />
                    </StackPanel>
                </dx:GroupFrame>
                <dx:GroupFrame Header="Range of recurrence" Margin="0,12,0,0">
                    <dxsch:RecurrenceRangeControl RecurrenceInfo="{Binding RecurrenceVisualController.RecurrenceInfo}"
                                TimeZoneHelper="{Binding ElementName=AptForm, Path=TimeZoneHelper, Mode=OneTime}"
                                Pattern="{Binding Controller.PatternCopy}"
                                />
                </dx:GroupFrame>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>