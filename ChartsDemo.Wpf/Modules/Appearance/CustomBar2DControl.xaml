<local:ChartsDemoModule x:Class="ChartsDemo.CustomBar2DControl" Height="400" Width="800"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:local="clr-namespace:ChartsDemo"
    ModuleAppear="ChartsDemoModule_ModuleAppear">
    <local:ChartsDemoModule.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ChartsDemo;component/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dxc:BrushOverlayConverter x:Key="brushOverlayConverter" />
        </ResourceDictionary>
    </local:ChartsDemoModule.Resources>
    <dxdb:DemoModuleControl SupressGroupFramePaddingInOptions="False">
        <dxc:ChartControl Name="chart" BorderThickness="0" CrosshairEnabled="False" AnimationMode="OnLoad">
            <dxc:ChartControl.Diagram>
                <dxc:XYDiagram2D>
                    <dxc:XYDiagram2D.Series>
                        <dxc:BarSideBySideSeries2D AnimationAutoStartMode="SetStartState" ColorEach="True" x:Name="series">
                            <dxc:BarSideBySideSeries2D.Model>
                                <dxc:CustomBar2DModel>
                                    <dxc:CustomBar2DModel.PointTemplate>
                                        <ControlTemplate>
                                            <Grid>
                                                <Border x:Name="border" Background="{Binding Path=PointColor, ConverterParameter=Gray, Converter={StaticResource brushOverlayConverter}}" Opacity="0.25" CornerRadius="5,5,0,0" Margin="0,-4,0,0" RenderTransformOrigin="0.5,0.5">
                                                    <Border.RenderTransform>
                                                        <ScaleTransform />
                                                    </Border.RenderTransform>
                                                </Border>
                                                <Border Background="{Binding Path=PointColor, ConverterParameter=Gray, Converter={StaticResource brushOverlayConverter}}" CornerRadius="3,3,0,0" Margin="4,0,4,0">
                                                    <Border CornerRadius="2,2,0,0" Margin="1,1,1,0">
                                                        <Border.Background>
                                                            <Binding Path="PointColor" Converter="{StaticResource brushOverlayConverter}">
                                                                <Binding.ConverterParameter>
                                                                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                                                        <GradientStop Color="#FFB2B2B2" Offset="0" />
                                                                        <GradientStop Color="#FFC2C2C2" Offset="1" />
                                                                    </LinearGradientBrush>
                                                                </Binding.ConverterParameter>
                                                            </Binding>
                                                        </Border.Background>
                                                    </Border>
                                                </Border>
                                                <Grid.Triggers>
                                                    <EventTrigger RoutedEvent="MouseEnter">
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="border">
                                                                <DoubleAnimation Duration="0:0:0.25" To="1.1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <BackEase Amplitude="2" EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.25" To="1.05" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <BackEase Amplitude="2" EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.25" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <BackEase Amplitude="2" EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="MouseLeave">
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="border">
                                                                <DoubleAnimation Duration="0:0:0.5" To="0.25" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <CircleEase EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.5" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <CircleEase EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.5" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <CircleEase EasingMode="EaseOut" />
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Grid.Triggers>
                                            </Grid>
                                        </ControlTemplate>
                                    </dxc:CustomBar2DModel.PointTemplate>
                                </dxc:CustomBar2DModel>
                            </dxc:BarSideBySideSeries2D.Model>
                            <dxc:BarSideBySideSeries2D.PointAnimation>
                                <local:CustomBar2DAnimation Duration="0:0:3" PointOrder="Random" />
                            </dxc:BarSideBySideSeries2D.PointAnimation>
                            <dxc:BarSideBySideSeries2D.Label>
                                <dxc:SeriesLabel RenderMode="CustomShape" ResolveOverlappingMode="Default">
                                    <dxc:SeriesLabel.ElementTemplate>
                                        <DataTemplate>
                                            <Border Background="{Binding Path=Color, ConverterParameter=Gray, Converter={StaticResource brushOverlayConverter}}"
                                                    Opacity="0.75" CornerRadius="2" Padding="8,2,8,2">
                                                <TextBlock Text="{Binding Text}" />
                                            </Border>
                                        </DataTemplate>
                                    </dxc:SeriesLabel.ElementTemplate>
                                </dxc:SeriesLabel>
                            </dxc:BarSideBySideSeries2D.Label>
                            <dxc:BarSideBySideSeries2D.Points>
                                <dxc:SeriesPoint Argument="A" Value="2.3" />
                                <dxc:SeriesPoint Argument="B" Value="3.2" />
                                <dxc:SeriesPoint Argument="C" Value="2.8" />
                                <dxc:SeriesPoint Argument="D" Value="2.6" />
                                <dxc:SeriesPoint Argument="E" Value="3.3" />
                                <dxc:SeriesPoint Argument="F" Value="4.2" />
                                <dxc:SeriesPoint Argument="G" Value="3.9" />
                                <dxc:SeriesPoint Argument="H" Value="4.6" />
                            </dxc:BarSideBySideSeries2D.Points>
                        </dxc:BarSideBySideSeries2D>
                    </dxc:XYDiagram2D.Series>
                </dxc:XYDiagram2D>
            </dxc:ChartControl.Diagram>
        </dxc:ChartControl>
    </dxdb:DemoModuleControl>
</local:ChartsDemoModule>